
/* 初期設定、ブラウザ間の異なるスタイルをリセット！ */


* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}


html,body {
  width: 100%;
  min-height: 100%;
  height: auto;
}

/* テーブルのスタイリング */

.flag-table {
  white-space: nowrap;
  overflow-x: scroll;
}

.c-table__normal {
  table-layout: fixed;
  min-width: 100%;
  /* min-width: 940px; */
}

.c-table__wrapper {
  position: relative;
  /* 子要素が絶対値をこのクラスから取るよという定義 */
  padding-top: 100px;
  /* 内に100px上にあけるよという定義 */
}

/* ボタンを囲む箱を固定するためのスタイリング
** position: absolute;をつけることで、
** 親要素にいるposition:relativeがついている要素に対して
** 絶対値で配置されるよ！
*/

.c-btn__container {
  position: absolute;
  /* ↑親要素から絶対値にするよという定義 */
  top: 20px;
  /* ↑親要素の上から何px離すかを定義 */
  right: 20px;
  /* ↑親要素の右から何px離すかを定義 */
}


/* ボタンの親要素！
** ul、すなわちリスト要素をつかっているよ！
** 理由はなんとなく！オッケー！
*/

.c-btn__list {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: flex-start;
  list-style: none;
}

/* ボタンをリスト使っているからね！
** 隣り合っていても少しの距離がわたしたちには必要
** それが10pxなの
*/

.c-btn__list li {
  margin: 0 10px;
}

/* ボタンそのもののスタイリングなんだ！
** 共通するスタイルを一つのクラスにまとめておくことで、
** 何度も同じスタイルを書く必要がないよ！！
** ばかは何度でもかくよ！！
*/


.c-btn__normal {
  display: block;
  padding: 4px 12px;
  font-size: 14px;
  font-weight: bold;
}


/* 削除ボタンのスタイリング！
** 削除ボタンだから赤にしてあるよ！単純！！うふふ！
*/

.c-btn__delete {
  color: #fff;
  background: #c33;
}

/* 編集ボタンのスタイリング！
** 編集ボタンだから色は適当なの！！ラッキー！！
*/

.c-btn__edit {
  color: #fff;
  background: #666;
}